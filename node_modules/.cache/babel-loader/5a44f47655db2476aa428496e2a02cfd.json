{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\nconst APPID = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Atlanta&APPID=${APPID}`).then(result => result.text()).then(data => {\n      this.setState({\n        isLoaded: true,\n        data: data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CurrentWeather, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FiveDayForecast, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/App.js"],"names":["React","Container","Row","Col","CurrentWeather","FiveDayForecast","APPID","App","Component","state","error","isLoaded","data","componentDidMount","fetch","then","result","text","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,WAAP;AAEA,MAAMC,KAAK,GAAG,kCAAd;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADwB;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,mEAAkER,KAAM,EAA1E,CAAL,CACGS,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAGKH,IAAD,IAAU;AACR,WAAKM,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEA;AAFM,OAAd;AAID,KARL,EASKF,KAAD,IAAW;AACT,WAAKQ,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdL;AAgBD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CADF,EAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFF,CADF,CADF,CADF;AAUD;;AApC+B;;AAuClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\n\nconst APPID = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\n\nclass App extends React.Component {\n  state = {\n    error: null,\n    isLoaded: false,\n    data: null,\n  }\n  componentDidMount() {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Atlanta&APPID=${APPID}`)\n      .then(result => result.text())\n      .then(\n        (data) => {\n          this.setState({\n            isLoaded: true,\n            data: data\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col sm={4}><CurrentWeather data={this.state.data} /></Col>\n            <Col sm={8}><FiveDayForecast /></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}