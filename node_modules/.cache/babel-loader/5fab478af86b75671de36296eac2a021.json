{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/components/FiveDayForecast.js\";\nimport React from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction CurrentWeather(props) {\n  console.log(props);\n\n  if (!props.forecast) {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading current weather conditions...\")));\n  }\n\n  const extractDates = data => {\n    const dates = null;\n\n    for (const property in data.dt_text) {\n      dates.push(data[property]);\n    }\n\n    console.log(\"++++++++++\", dates);\n    return dates;\n  };\n\n  console.log(props);\n  const options = {\n    chart: {\n      type: 'spline'\n    },\n    title: {\n      text: props.forecast.city.name\n    },\n    subtitle: {\n      text: '5 Day Forecast'\n    },\n    xAxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n    yAxis: {\n      title: {\n        text: 'Temperature'\n      },\n      labels: {\n        formatter: function () {\n          return this.value + '°';\n        }\n      }\n    },\n    tooltip: {\n      crosshairs: true,\n      shared: true\n    },\n    plotOptions: {\n      spline: {\n        marker: {\n          radius: 4,\n          lineColor: '#666666',\n          lineWidth: 1\n        }\n      }\n    },\n    series: [{\n      data: extractDates(props.forecast.list)\n    }]\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n}\n\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/components/FiveDayForecast.js"],"names":["React","Card","Spinner","Highcharts","HighchartsReact","CurrentWeather","props","console","log","forecast","extractDates","data","dates","property","dt_text","push","options","chart","type","title","text","city","name","subtitle","xAxis","categories","yAxis","labels","formatter","value","tooltip","crosshairs","shared","plotOptions","spline","marker","radius","lineColor","lineWidth","series","list"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction CurrentWeather(props) {\n  console.log(props)\n    if (!props.forecast) {\n        return (\n          <Card>\n            <Card.Body>\n                <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                <Card.Text>Loading current weather conditions...</Card.Text>\n            </Card.Body>\n          </Card>\n        )\n    }\n\n    const extractDates = (data) => {\n      const dates = null;\n      for (const property in data.dt_text) {\n        dates.push(data[property]);\n      }\nconsole.log(\"++++++++++\", dates)\n      return dates;\n    }\n    console.log(props)\n    const options = {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: props.forecast.city.name\n        },\n        subtitle: {\n            text: '5 Day Forecast'\n        },\n        xAxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        yAxis: {\n            title: {\n                text: 'Temperature'\n            },\n            labels: {\n                formatter: function () {\n                    return this.value + '°';\n                }\n            }\n        },\n        tooltip: {\n            crosshairs: true,\n            shared: true\n        },\n        plotOptions: {\n            spline: {\n                marker: {\n                    radius: 4,\n                    lineColor: '#666666',\n                    lineWidth: 1\n                }\n            }\n        },\n        series: [{\n            data: extractDates(props.forecast.list)\n        }]\n      }\n    \n    return (\n    <Card>\n        <Card.Body>\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={options}\n            />\n        </Card.Body>\n    </Card>\n    );\n}\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}