{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/components/CurrentWeather.js\";\nimport React from 'react';\nimport { Card, Image, Spinner } from 'react-bootstrap';\nconst CurrentWeather = React.memo(function CurrentWeather(props) {\n  console.log(props);\n  const imperialUnit = '°F';\n\n  if (!props.weather) {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading current weather conditions...\")));\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.weather.name), new Date(props.weather.dt * 1000).toLocaleTimeString()), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.weather.weather[0].main), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.weather.weather[0].description), React.createElement(Image, {\n    src: `https://openweathermap.org/img/wn/${props.weather.weather[0].icon}@2x.png`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, Math.round(props.weather.main.temp), imperialUnit), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"H: \", Math.round(props.weather.main.temp_max), imperialUnit), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"L: \", Math.round(props.weather.main.temp_min), imperialUnit)), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"(feels like \", Math.round(props.weather.main.feels_like), imperialUnit, \")\"))), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"small text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Wind: \", props.weather.wind.speed, \" mph\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Pressure: \", props.weather.main.pressure, \" hpa\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Humidity: \", props.weather.main.humidity, \" %\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sunrise: \", new Date(props.weather.sys.sunrise * 1000).toLocaleTimeString()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sunset: \", new Date(props.weather.sys.sunset * 1000).toLocaleTimeString()))));\n});\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/components/CurrentWeather.js"],"names":["React","Card","Image","Spinner","CurrentWeather","memo","props","console","log","imperialUnit","weather","name","Date","dt","toLocaleTimeString","main","description","icon","Math","round","temp","temp_max","temp_min","feels_like","wind","speed","pressure","humidity","sys","sunrise","sunset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Image, Spinner } from 'react-bootstrap';\n\nconst CurrentWeather = React.memo(function CurrentWeather(props) {\n  console.log(props)\n  const imperialUnit = '°F';\n  \n  if (!props.weather) {\n    return (\n      <Card>\n        <Card.Body>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n          <Card.Text>Loading current weather conditions...</Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  return (\n    <Card>\n        <Card.Header>\n          <h3>{ props.weather.name }</h3>\n          {(new Date(props.weather.dt*1000)).toLocaleTimeString()}\n        </Card.Header>\n        <Card.Body>\n          <React.Fragment>\n            <h4 className=\"primary\">{ props.weather.weather[0].main }</h4>\n            <div>{ props.weather.weather[0].description }</div>\n            <Image src={`https://openweathermap.org/img/wn/${props.weather.weather[0].icon}@2x.png`} />\n            <div>\n              <h3>\n                { Math.round(props.weather.main.temp) }{imperialUnit}\n              </h3>\n              <small>H: { Math.round(props.weather.main.temp_max) }{imperialUnit}</small>\n              <small>L: { Math.round(props.weather.main.temp_min) }{imperialUnit}</small>\n            </div>\n            <small>(feels like { Math.round(props.weather.main.feels_like) }{imperialUnit})</small>\n          </React.Fragment>\n        </Card.Body>\n        <Card.Footer>\n            <div className='small text-left'>\n              <div>Wind: { props.weather.wind.speed } mph</div>\n              <div>Pressure: { props.weather.main.pressure } hpa</div>\n              <div>Humidity: { props.weather.main.humidity } %</div>\n              <div>Sunrise: { (new Date(props.weather.sys.sunrise*1000)).toLocaleTimeString() }</div>\n              <div>Sunset: { (new Date(props.weather.sys.sunset*1000)).toLocaleTimeString() }</div>\n            </div>\n        </Card.Footer>\n    </Card>\n  );\n});\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}