{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\nconst APPID = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: null,\n      longitude: null\n    };\n\n    this.success = position => {\n      // this.setState({ latitude: position.coords.latitude });\n      // this.setState({ longitude: position.coords.longitude });\n      Promise.all([fetch(\"http://localhost:3000/items/get\"), fetch(\"http://localhost:3000/contactlist/get\"), fetch(\"http://localhost:3000/itemgroup/get\")]).then(([items, contactlist, itemgroup]) => {}).catch(err => {\n        console.log(err);\n      }); // try {\n      //   let [weather] = await Promise.all([\n      //     fetch(`https://api.openweathermap.org/data/2.5/weather?lat={${position.coords.latitude}}&lon={${position.coords.longitude}}&APPID=${APPID}`),\n      //   ]);\n      // }\n      // catch(err) {\n      //   console.log(err);\n      // };\n    };\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {// status.textContent = 'Geolocation is not supported by your browser';\n    } else {\n      // status.textContent = 'Locating…';\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CurrentWeather, {\n      OWMKey: APPID,\n      lat: this.state.latitude,\n      lon: this.state.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FiveDayForecast, {\n      OWMKey: APPID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/App.js"],"names":["React","Container","Row","Col","CurrentWeather","FiveDayForecast","APPID","App","Component","state","latitude","longitude","success","position","Promise","all","fetch","then","items","contactlist","itemgroup","catch","err","console","log","componentDidMount","navigator","geolocation","getCurrentPosition","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,WAAP;AAEA,MAAMC,KAAK,GAAG,kCAAd;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADwB;;AAAA,SAehCC,OAfgC,GAerBC,QAAD,IAAc;AACtB;AACA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAAC,iCAAD,CADK,EAEVA,KAAK,CAAC,uCAAD,CAFK,EAGVA,KAAK,CAAC,qCAAD,CAHK,CAAZ,EAIGC,IAJH,CAIQ,CAAC,CAACC,KAAD,EAAQC,WAAR,EAAqBC,SAArB,CAAD,KAAqC,CAE5C,CAND,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OARD,EAJsB,CAatB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,KArC+B;AAAA;;AAMhCG,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B,CAC1B;AACD,KAFD,MAEO;AACL;AACAD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKhB,OAA9C,EAAuD,KAAKiB,KAA5D;AACD;AACF;;AA0BDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAExB,KAAxB;AAA+B,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWC,QAA/C;AAAyD,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CADF,EAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAEL,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFF,CADF,CADF,CADF;AAUD;;AAlD+B;;AAqDlC,eAAeC,GAAf","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\n\nconst APPID = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\n\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      // status.textContent = 'Geolocation is not supported by your browser';\n    } else {\n      // status.textContent = 'Locating…';\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  success = (position) => {\n    // this.setState({ latitude: position.coords.latitude });\n    // this.setState({ longitude: position.coords.longitude });\n\n    Promise.all([\n      fetch(\"http://localhost:3000/items/get\"),\n      fetch(\"http://localhost:3000/contactlist/get\"),\n      fetch(\"http://localhost:3000/itemgroup/get\")\n    ]).then(([items, contactlist, itemgroup]) => {\n\n    }).catch((err) => {\n        console.log(err);\n    });\n    // try {\n    //   let [weather] = await Promise.all([\n    //     fetch(`https://api.openweathermap.org/data/2.5/weather?lat={${position.coords.latitude}}&lon={${position.coords.longitude}}&APPID=${APPID}`),\n    //   ]);\n    \n    // }\n    // catch(err) {\n    //   console.log(err);\n    // };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col sm={4}><CurrentWeather OWMKey={APPID} lat={this.state.latitude} lon={this.state.longitude} /></Col>\n            <Col sm={8}><FiveDayForecast OWMKey={APPID} /></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}