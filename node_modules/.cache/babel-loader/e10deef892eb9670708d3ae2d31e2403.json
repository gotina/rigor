{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\nconst InitialState = {\n  weather: null,\n  forecast: null,\n  city: ''\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = localStorage.getItem('appState') ? JSON.parse(localStorage.getItem('appState')) : InitialState;\n\n    this.success = position => {\n      this.fetchData(position.coords.latitude, position.coords.longitude);\n    };\n\n    this.fetchData = (lat, lon) => {\n      Promise.all([fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`), fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`)]).then(async ([weather, forecast]) => {\n        const current = await weather.json();\n        const future = await forecast.json();\n        return [current, future];\n      }).then(response => {\n        this.setState({\n          weather: response[0]\n        });\n        this.setState({\n          forecast: response[1]\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.error = () => {\n      alert('Unable to retrieve your location');\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(this.state.city);\n\n      if (localStorage.getItem(this.state.city)) {\n        const item = localStorage.getItem(this.state.city);\n        this.setState({ ...item\n        });\n      } else {\n        fetch(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.city}&key=${OGKEY}`).then(response => response.json()).then(data => {\n          this.fetchData(data.results[0].geometry.lat, data.results[0].geometry.lng);\n        }, error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n        event.preventDefault();\n        localStorage.setItem(`${this.state.city}`, JSON.stringify(this.state));\n      }\n    };\n  }\n\n  componentDidMount() {// if (!navigator.geolocation) {\n    //   alert('Geolocation is not supported by your browser');\n    // } else {\n    //   navigator.geolocation.getCurrentPosition(this.success, this.error);\n    // }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('appState', JSON.stringify(this.state));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(CurrentWeather, {\n      OWMKey: OWMKEY,\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FiveDayForecast, {\n      OWMKey: OWMKEY,\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/App.js"],"names":["React","Container","Row","Col","CurrentWeather","FiveDayForecast","OWMKEY","OGKEY","InitialState","weather","forecast","city","App","Component","state","localStorage","getItem","JSON","parse","success","position","fetchData","coords","latitude","longitude","lat","lon","Promise","all","fetch","then","current","json","future","response","setState","catch","err","console","log","error","alert","handleChange","event","target","value","handleSubmit","item","data","results","geometry","lng","isLoaded","preventDefault","setItem","stringify","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\n\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\n\nconst InitialState = {\n  weather: null,\n  forecast: null,\n  city: ''\n}\n\nclass App extends React.Component {\n  state = localStorage.getItem('appState') ? JSON.parse(localStorage.getItem('appState')) : InitialState;\n\n  componentDidMount() {\n    // if (!navigator.geolocation) {\n    //   alert('Geolocation is not supported by your browser');\n    // } else {\n    //   navigator.geolocation.getCurrentPosition(this.success, this.error);\n    // }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('appState', JSON.stringify(this.state));\n  }\n\n  success = (position) => {\n    this.fetchData(position.coords.latitude, position.coords.longitude);    \n  }\n\n  fetchData = (lat, lon) => {\n    Promise.all([\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`),\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`),\n    ])\n    .then(async([weather, forecast]) => {\n      const current = await weather.json();\n      const future = await forecast.json();\n      return [current, future]\n    })   \n    .then((response) => {\n      this.setState({ weather: response[0] });\n      this.setState({ forecast: response[1] })\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  error = () => {\n    alert('Unable to retrieve your location');\n  }\n\n  handleChange = (event) => {\n    this.setState({city: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    console.log(this.state.city)\n    if (localStorage.getItem(this.state.city)) {\n      const item = localStorage.getItem(this.state.city);\n      this.setState({ ...item });\n    } else {\n      fetch(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.city}&key=${OGKEY}`)\n      .then(response => response.json())\n      .then(\n        (data) => {\n            this.fetchData(data.results[0].geometry.lat, data.results[0].geometry.lng);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    event.preventDefault();\n    localStorage.setItem(`${this.state.city}`, JSON.stringify(this.state));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input type=\"text\" value={this.state.city} onChange={this.handleChange}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </Row>\n          <Row>\n            <Col sm={4}><CurrentWeather OWMKey={OWMKEY} weather={this.state.weather} /></Col>\n            <Col sm={8}><FiveDayForecast OWMKey={OWMKEY} forecast={this.state.forecast}/></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}