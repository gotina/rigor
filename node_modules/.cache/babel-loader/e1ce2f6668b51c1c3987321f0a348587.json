{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\nconst InitialState = {\n  latitude: null,\n  longitude: null,\n  weather: null,\n  forecast: null\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.success = position => {\n      this.fetchData(position.coords.latitude, position.coords.longitude);\n    };\n\n    this.fetchData = (lat, lon) => {\n      Promise.all([fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`), fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`)]).then(async ([weather, forecast]) => {\n        const current = await weather.json();\n        const future = await forecast.json();\n        return [current, future];\n      }).then(response => {\n        this.setState({\n          weather: response[0]\n        });\n        this.setState({\n          forecast: response[1]\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.error = () => {\n      alert('Unable to retrieve your location');\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        zip: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      fetch(\"https://api.example.com/items\").then(response => response.json()).then(data => {\n        this.setState({\n          isLoaded: true,\n          latitude: data.results[0].geometry.lat,\n          longitude: data.results[0].geometry.lng\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      alert('A name was submitted: ' + this.state.zip);\n      event.preventDefault();\n    };\n\n    this.state = localStorage.getItem(\"appState\") ? JSON.parse(localStorage.getItem(\"appState\")) : InitialState;\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('appState', JSON.stringify(this.state));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.zip,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(CurrentWeather, {\n      OWMKey: OWMKEY,\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FiveDayForecast, {\n      OWMKey: OWMKEY,\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/App.js"],"names":["React","Container","Row","Col","CurrentWeather","FiveDayForecast","OWMKEY","OGKEY","InitialState","latitude","longitude","weather","forecast","App","Component","constructor","props","success","position","fetchData","coords","lat","lon","Promise","all","fetch","then","current","json","future","response","setState","catch","err","console","log","error","alert","handleChange","event","zip","target","value","handleSubmit","data","isLoaded","results","geometry","lng","state","preventDefault","localStorage","getItem","JSON","parse","componentDidMount","navigator","geolocation","getCurrentPosition","componentWillUnmount","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport './App.css';\n\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\n\nconst InitialState = {\n  latitude: null,\n  longitude: null,\n  weather: null,\n  forecast: null\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = localStorage.getItem(\"appState\") ? JSON.parse(localStorage.getItem(\"appState\")) : InitialState;\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('appState', JSON.stringify(this.state));\n  }\n\n  success = (position) => {\n    this.fetchData(position.coords.latitude, position.coords.longitude);    \n  }\n\n  fetchData = (lat, lon) => {\n    Promise.all([\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`),\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`),\n    ])\n    .then(async([weather, forecast]) => {\n      const current = await weather.json();\n      const future = await forecast.json();\n      return [current, future]\n    })   \n    .then((response) => {\n      this.setState({ weather: response[0] });\n      this.setState({ forecast: response[1] })\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  error = () => {\n    alert('Unable to retrieve your location');\n  }\n\n  handleChange = (event) => {\n    this.setState({zip: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    fetch(\"https://api.example.com/items\")\n      .then(response => response.json())\n      .then(\n        (data) => {\n          this.setState({\n            isLoaded: true,\n            latitude: data.results[0].geometry.lat,\n            longitude: data.results[0].geometry.lng,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    alert('A name was submitted: ' + this.state.zip);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input type=\"text\" value={this.state.zip} onChange={this.handleChange}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </Row>\n          <Row>\n            <Col sm={4}><CurrentWeather OWMKey={OWMKEY} weather={this.state.weather} /></Col>\n            <Col sm={8}><FiveDayForecast OWMKey={OWMKEY} forecast={this.state.forecast}/></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}