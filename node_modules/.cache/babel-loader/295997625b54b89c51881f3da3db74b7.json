{"ast":null,"code":"var _jsxFileName = \"/Users/tbaggett/Development/rigor/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col, Form, Button, InputGroup } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport HistorySelector from './components/HistorySelector';\nimport './App.css';\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\nconst InitialState = {\n  weather: null,\n  forecast: null,\n  city: ''\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = localStorage.getItem('appState') ? JSON.parse(localStorage.getItem('appState')) : InitialState;\n\n    this.success = position => {\n      this.fetchData(position.coords.latitude, position.coords.longitude);\n    };\n\n    this.fetchData = (lat, lon) => {\n      Promise.all([fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`), fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`)]).then(async ([weather, forecast]) => {\n        const current = await weather.json();\n        const future = await forecast.json();\n        return [current, future];\n      }).then(response => {\n        this.setState({\n          weather: response[0]\n        });\n        this.setState({\n          forecast: response[1]\n        });\n      }).then(response => {\n        if (this.state.city !== '') {\n          localStorage.setItem(`wapp-${this.state.city}`, JSON.stringify(this.state));\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.error = () => {\n      alert('Unable to retrieve your location');\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      if (localStorage.getItem(`wapp-${this.state.city}`)) {\n        this.setState(JSON.parse(localStorage.getItem(`wapp-${this.state.city}`)));\n      } else {\n        fetch(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.city}&key=${OGKEY}`).then(response => response.json()).then(data => {\n          this.fetchData(data.results[0].geometry.lat, data.results[0].geometry.lng);\n        }, error => {\n          this.setState({\n            error\n          });\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.handleSelect = event => {\n      console.log(\"%%%%%%%%%%\", event.parentElement.getAttribute('name'));\n      this.setState(JSON.parse(localStorage.getItem(`wapp-${event.target.value}`)));\n    };\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      placeholder: \"Search by City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Search\"))))), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(HistorySelector, {\n      handleSelect: this.handleSelect,\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CurrentWeather, {\n      OWMKey: OWMKEY,\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(FiveDayForecast, {\n      OWMKey: OWMKEY,\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tbaggett/Development/rigor/src/App.js"],"names":["React","Container","Row","Col","Form","Button","InputGroup","CurrentWeather","FiveDayForecast","HistorySelector","OWMKEY","OGKEY","InitialState","weather","forecast","city","App","Component","state","localStorage","getItem","JSON","parse","success","position","fetchData","coords","latitude","longitude","lat","lon","Promise","all","fetch","then","current","json","future","response","setState","setItem","stringify","catch","err","console","log","error","alert","handleChange","event","target","value","handleSubmit","data","results","geometry","lng","preventDefault","handleSelect","parentElement","getAttribute","componentDidMount","navigator","geolocation","getCurrentPosition","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col, Form, Button, InputGroup } from 'react-bootstrap';\nimport CurrentWeather from './components/CurrentWeather';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport HistorySelector from './components/HistorySelector';\nimport './App.css';\n\nconst OWMKEY = '8c3e7fd0f6ec033c8ecf4379bb4cce9d';\nconst OGKEY = '105d83d3523543558902f454f58714c6';\n\nconst InitialState = {\n  weather: null,\n  forecast: null,\n  city: '',\n}\n\nclass App extends React.Component {\n  state = localStorage.getItem('appState') ? JSON.parse(localStorage.getItem('appState')) : InitialState;\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  }\n\n  success = (position) => {\n    this.fetchData(position.coords.latitude, position.coords.longitude);    \n  }\n\n  fetchData = (lat, lon) => {\n    Promise.all([\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&APPID=${OWMKEY}`),\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&&units=imperial&APPID=${OWMKEY}`),\n    ])\n    .then(async([weather, forecast]) => {\n      const current = await weather.json();\n      const future = await forecast.json();\n      return [current, future]\n    })   \n    .then((response) => {\n      this.setState({ weather: response[0] });\n      this.setState({ forecast: response[1] })\n    })\n    .then((response) => {\n      if (this.state.city !== '') {\n        localStorage.setItem(`wapp-${this.state.city}`, JSON.stringify(this.state));\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  error = () => {\n    alert('Unable to retrieve your location');\n  }\n\n  handleChange = (event) => {\n    this.setState({city: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    if (localStorage.getItem(`wapp-${this.state.city}`)) {\n      this.setState(JSON.parse(localStorage.getItem(`wapp-${this.state.city}`)));\n    } else {\n      fetch(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.city}&key=${OGKEY}`)\n      .then(response => response.json())\n      .then(\n        (data) => {\n          this.fetchData(data.results[0].geometry.lat, data.results[0].geometry.lng);\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n    }\n    event.preventDefault();\n  }\n\n  handleSelect = (event) => {\n    console.log(\"%%%%%%%%%%\", event.parentElement.getAttribute('name'))\n    this.setState(JSON.parse(localStorage.getItem(`wapp-${event.target.value}`)));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col sm={4}>\n              <Form onSubmit={this.handleSubmit}>\n                <InputGroup className=\"mb-3\">\n                  <Form.Control type=\"text\" value={this.state.city} onChange={this.handleChange} placeholder=\"Search by City\" />\n                  <InputGroup.Append>\n                  <Button variant=\"primary\" type=\"submit\">Search</Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form>\n            </Col>\n            <Col sm={8}><HistorySelector handleSelect={this.handleSelect} city={this.state.city}/></Col>\n          </Row>\n          <Row>\n            <Col sm={4}><CurrentWeather OWMKey={OWMKEY} weather={this.state.weather} /></Col>\n            <Col sm={8}><FiveDayForecast OWMKey={OWMKEY} forecast={this.state.forecast}/></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}